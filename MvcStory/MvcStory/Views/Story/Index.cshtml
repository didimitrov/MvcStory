@*@model IEnumerable<DiaryApp.Story>*@
@model PagedList.IPagedList<MvcStory.Models.Story>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Stories";
}

@*<h2>Stories</h2>*@

<p>
    @*@Html.ActionLink("Create New", "Create")*@

    @using (Html.BeginForm("Index", "Story", FormMethod.Get))
    {
        @*<p>Title: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
            <input type="submit" value="Search" />
            </p>*@
        <div class="row">
            <div class="col-lg-6">
                <div class="input-group">
                    <span class="input-group-btn">
                        <button class="btn btn-default" type="submit">Go!</button>
                    </span>
                    <input type="text" name="SearchString" class="form-control" placeholder="Search for...">
                </div>
            </div>
        </div>
    }
</p>
@*<table border="1" class="table">
    <tr>
        <th>
            @Html.ActionLink("Title", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            Text
        </th>
        <th>
            @Html.ActionLink("Date", "Index", new { sortOrder = ViewBag.DateSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>Rating</th>
        <th>Action</th>
    </tr>*@

<span class="label label-default">Sort by:</span>
<div class="btn-group" role="group" aria-label="...">
    <button type="button" class="btn btn-default">@Html.ActionLink("Date", "Index", new { sortOrder = ViewBag.DateSortParm, currentFilter = ViewBag.CurrentFilter })</button>
    <button type="button" class="btn btn-default">@Html.ActionLink("Title", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter })</button>

    @*Sort by date:@Html.ActionLink("Date", "Index", new { sortOrder = ViewBag.DateSortParm, currentFilter = ViewBag.CurrentFilter })
        sort by title: @Html.ActionLink("Title", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter })*@
</div>
<br />
@*<tr>
        <th>
            @Html.DisplayNameFor(model => model.Title)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Content)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Date)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Rate)
        </th>
        <th></th>
    </tr>*@
@if (Model.Count() == 0)
{
    <div class="alert alert-info" role="alert">No story match...</div>
}
else
{

    foreach (var item in Model)
    {
        @*<tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Content)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Date)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Rate)
                </td>
                <td>
                    @Html.ActionLink("Delete", "Delete", new { id=item.Id })
                </td>
            </tr>*@
        <div class="panel panel-primary">
            <div class="panel-heading">
                <h3 class="panel-title">@Html.DisplayFor(modelItem => item.Title)</h3>
            </div>
            <div class="panel-body">
                @*<div class="row">*@
                <div class="col-xs-6 col-md-4">
                    <a href="#" class="thumbnail">
                        <img src="~/Content/Image/hire_asp_net_developer.png" />
                    </a>
                </div>
                @*</div>*@
                @Html.DisplayFor(modelItem => item.Rating) <br />
                @Html.DisplayFor(modelItem => item.ReleaseDate) <br />
                @Html.DisplayFor(modelItem => item.Text)  <br />
                @Html.ActionLink("Delete", "Delete", new { id = item.Id })
            </div>
        </div>
    }
}
@*</table>*@
<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
